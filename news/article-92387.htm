<!doctype html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://freematsuri.github.io/news/article-92387.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Axios封装和Vuex模块化</title>
        <meta name="description" content="axios封装  我之前是这样写法,如果有params,query参数字段的话字符串拼接。但看网上的有人说不建议放在Vue原型  import axios from 'axios' Vue.proto" />
        <link rel="icon" href="/assets/website/img/freematsuri/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Free Matsuri免费订阅节点分享官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://freematsuri.github.io/news/article-92387.htm" />
    <meta property="og:site_name" content="Free Matsuri免费订阅节点分享官网" />
    <meta property="og:title" content="Axios封装和Vuex模块化" />
    <meta property="og:image" content="https://freematsuri.github.io/uploads/20241222/19c88e326fe982b86f1dda02314a37ff.webp" />
        <meta property="og:release_date" content="2025-04-10T08:15:23" />
    <meta property="og:updated_time" content="2025-04-10T08:15:23" />
        <meta property="og:description" content="axios封装  我之前是这样写法,如果有params,query参数字段的话字符串拼接。但看网上的有人说不建议放在Vue原型  import axios from 'axios' Vue.proto" />
    
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Axios封装和Vuex模块化">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
        
    <!-- Bootstrap Min CSS -->
    <link rel="stylesheet" href="/assets/website/css/freematsuri/bootstrap.min.css">
    <!-- Animate Min CSS -->
    <link rel="stylesheet" href="/assets/website/css/freematsuri/animate.css">
    <!-- Font Awesome Min CSS -->
    <link rel="stylesheet" href="/assets/website/css/freematsuri/font-awesome.min.css">
    <!-- Magnific Popup Min CSS -->
    <link rel="stylesheet" href="/assets/website/css/freematsuri/magnific-popup.css">
    <!-- IcoFont Min CSS -->
    <link rel="stylesheet" href="/assets/website/css/freematsuri/icofont.css">
    <!-- Owl Carousel Min CSS -->
    <link rel="stylesheet" href="/assets/website/css/freematsuri/owl.carousel.min.css">
    <!-- Classy Nav Min CSS-->
    <link rel="stylesheet" href="/assets/website/css/freematsuri/classy-nav.min.css">
    <!-- Style CSS -->
    <link rel="stylesheet" href="/assets/website/css/freematsuri/style.css">
    <!-- Responsive Min CSS -->
    <link rel="stylesheet" href="/assets/website/css/freematsuri/responsive.css">
    <!-- Color Default CSS -->
    <link rel="stylesheet" href="/assets/website/css/freematsuri/color/color-default.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-QMN91ZXX4C"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-QMN91ZXX4C');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- Start Preloader Area -->
    <div id="preloader-area">
        <div class="loader">
            <div id="largeBox"></div>
            <div id="smallBox"></div>
        </div>
    </div>
    <!-- End Preloader Area -->
    <!-- Start Main Menu Area -->
    <div class="main-header-area header-sticky">
        <div class="container">
            <div class="classy-nav-container breakpoint-off">
                <!-- Classy Menu -->
                <nav class="classy-navbar justify-content-between" id="eduNav">
                    <!-- Logo -->
                    <a class="nav-brand" href="/">
                                        <span>Free Matsuri</span>
                                        </a>
                    <!-- Navbar Toggler -->
                    <div class="classy-navbar-toggler">
                        <span class="navbarToggler"><span></span><span></span><span></span></span>
                    </div>
                    <!-- Menu -->
                    <div class="classy-menu">
                        <!-- close btn -->
                        <div class="classycloseIcon">
                            <div class="cross-wrap"><span class="top"></span><span class="bottom"></span></div>
                        </div>
                        <!-- Nav Start -->
                        <div class="classynav">
                            <ul>
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                <li><a href="/client.htm">客户端</a></li>
                                                            </ul>
                        </div>
                        <!-- Nav End -->
                    </div>
                </nav>
            </div>
        </div>
    </div>
    <!-- End Main Menu Area -->
    <!-- Start Page Title Area -->
    <div class="page-title">
        <div class="d-table">
            <div class="d-table-cell">
                <div class="container">
                    <div class="row">
                        <div class="col-lg-12 col-md-12">
                            <h1>Axios封装和Vuex模块化</h1>
                            <ul>
                                <li><a href="/">首页</a></li>
                                <li>/</li>
                                <li><a href="/news/">新闻资讯</a></li>
                                <li>/</li>
                                <li>正文</li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- End Page Title Area -->
    <!-- Start About Area -->
    <section class="about-area ptb-80">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-dracula"> <h4> <a id="axios_0" rel="nofollow"></a>axios封装</h4> <blockquote> <p>我之前是这样写法,如果有params,query参数字段的话字符串拼接。但看网上的有人说不建议放在Vue原型</p> </blockquote> <pre><code class="prism language-javascript"><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">'axios'</span> Vue<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$ajax<span class="token operator">=</span> axios <span class="token comment">// 原型</span>   <span class="token keyword">this</span><span class="token punctuation">.</span>$ajax<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'api/getNewsList'</span><span class="token punctuation">)</span> <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{<!-- --></span>     <span class="token keyword">this</span><span class="token punctuation">.</span>newsList<span class="token operator">=</span>response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{<!-- --></span>     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> </code></pre> <blockquote> <p>这两天看大佬写Vuex+axios，大佬就是大佬</p> </blockquote> <p>封装axios</p> <pre><code class="prism language-javascript"><span class="token comment">/* ajax 请求函数模块 */</span> <span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">'axios'</span> <span class="token comment">/**  * 向外部暴漏一个函数 ajax  * @param {*} url 请求路径，默认为空  * @param {*} data 请求参数，默认为空对象  * @param {*} type 请求方法，默认为GET  */</span> <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">ajax</span> <span class="token punctuation">(</span>url <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">,</span> data <span class="token operator">=</span> <span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span><span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token string">'GET'</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>   <span class="token comment">// 返回值 Promise对象 （异步返回的数据是response.data，而不是response）</span>   <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     <span class="token comment">// （利用axios）异步执行ajax请求</span>     <span class="token keyword">let</span> promise <span class="token comment">// 这个内部的promise用来保存axios的返回值(promise对象)</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">'GET'</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>       <span class="token comment">// 准备 url query 参数数据</span>       <span class="token keyword">let</span> dataStr <span class="token operator">=</span> <span class="token string">''</span> <span class="token comment">// 数据拼接字符串，将data连接到url</span>       Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>key <span class="token operator">=&gt;</span> <span class="token punctuation">{<!-- --></span>         dataStr <span class="token operator">+=</span> key <span class="token operator">+</span> <span class="token string">'='</span> <span class="token operator">+</span> data<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">'&amp;'</span>       <span class="token punctuation">}</span><span class="token punctuation">)</span>       <span class="token keyword">if</span> <span class="token punctuation">(</span>dataStr <span class="token operator">!==</span> <span class="token string">''</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>       <span class="token comment">// 把最后的&amp;去掉，拼成完整的url</span>         dataStr <span class="token operator">=</span> dataStr<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> dataStr<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">'&amp;'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>         url <span class="token operator">=</span> url <span class="token operator">+</span> <span class="token string">'?'</span> <span class="token operator">+</span> dataStr       <span class="token punctuation">}</span>       <span class="token comment">// 发送 get 请求</span>       promise <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>     <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{<!-- --></span>       <span class="token comment">// 发送 post 请求</span>       promise <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token punctuation">)</span>     <span class="token punctuation">}</span>     promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>response <span class="token operator">=&gt;</span> <span class="token punctuation">{<!-- --></span>       <span class="token comment">// 成功回调resolve()</span>       <span class="token function">resolve</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">)</span>     <span class="token punctuation">}</span><span class="token punctuation">)</span>       <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>error <span class="token operator">=&gt;</span> <span class="token punctuation">{<!-- --></span>         <span class="token comment">// 失败回调reject()</span>         <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>       <span class="token punctuation">}</span><span class="token punctuation">)</span>   <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>  </code></pre> <p>使用的话</p> <pre><code class="prism language-javascript"><span class="token keyword">const</span> <span class="token constant">BASE_URL</span> <span class="token operator">=</span> <span class="token string">'/api'</span>  <span class="token comment">// 地址全写，但考虑跨域 / proxy 跨域设置</span> <span class="token comment">// params参数 </span> <span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">reqAddress</span> <span class="token operator">=</span> geohash <span class="token operator">=&gt;</span> <span class="token function">ajax</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${<!-- --></span><span class="token constant">BASE_URL</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/position/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${<!-- --></span>geohash<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">)</span> <span class="token comment">// query参数</span> <span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">reqSearchShop</span> <span class="token operator">=</span> <span class="token punctuation">(</span>geohash<span class="token punctuation">,</span> keyword<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">ajax</span><span class="token punctuation">(</span><span class="token constant">BASE_URL</span> <span class="token operator">+</span> <span class="token string">'/search_shops'</span><span class="token punctuation">,</span> <span class="token punctuation">{<!-- --></span>geohash<span class="token punctuation">,</span> keyword<span class="token punctuation">}</span><span class="token punctuation">)</span> </code></pre> <h4> <a id="Vuex_74" rel="nofollow"></a>Vuex模块化</h4> <p><img decoding="async" src="http://img.555519.xyz/uploads/20221230/a40cca4c099c0d57027a78d37afe06ec.jpg" alt="Axios封装和Vuex模块化"><br /> index.js</p> <pre><code class="prism language-javascript"><span class="token comment">/* vuex最核心的管理对象store 组装模块并导出 store 的地方  */</span> <span class="token comment">// 首先引入Vue及Vuex</span> <span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span> <span class="token keyword">import</span> Vuex <span class="token keyword">from</span> <span class="token string">'vuex'</span>  <span class="token comment">// 引入四个基本模块</span> <span class="token keyword">import</span> state <span class="token keyword">from</span> <span class="token string">'./state'</span> <span class="token keyword">import</span> mutations <span class="token keyword">from</span> <span class="token string">'./mutations'</span> <span class="token keyword">import</span> actions <span class="token keyword">from</span> <span class="token string">'./actions'</span> <span class="token keyword">import</span> getters <span class="token keyword">from</span> <span class="token string">'./getters'</span>  <span class="token comment">// 一定要声明使用插件</span> Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Vuex<span class="token punctuation">)</span>  <span class="token comment">// 把 store 对象提供给 “store” 选项，这可以把 store 的实例注入所有的子组件</span> <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span>   state<span class="token punctuation">,</span>   mutations<span class="token punctuation">,</span>   actions<span class="token punctuation">,</span>   getters <span class="token punctuation">}</span><span class="token punctuation">)</span> </code></pre> <blockquote> <p>挂载Vue实例<br /> 使用的话this.$</p> </blockquote> <pre><code class="prism language-javascript"><span class="token keyword">import</span> store <span class="token keyword">from</span> <span class="token string">'./store'</span>  <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span>   el<span class="token punctuation">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>   components<span class="token punctuation">:</span> <span class="token punctuation">{<!-- --></span> App <span class="token punctuation">}</span><span class="token punctuation">,</span>   template<span class="token punctuation">:</span> <span class="token string">'&lt;App/&gt;'</span><span class="token punctuation">,</span>   <span class="token comment">// 为根组件加入路由</span>   router<span class="token punctuation">,</span>   store <span class="token punctuation">}</span><span class="token punctuation">)</span> </code></pre> <p>state.js</p> <pre><code class="prism language-javascript"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{<!-- --></span>   categorys<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 食品分类数组</span>   goods<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 商品列表</span>   info<span class="token punctuation">:</span> <span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// 商家信息</span> <span class="token punctuation">}</span> </code></pre> <p>mutation-types.js</p> <pre><code class="prism language-javascript"><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">RECEIVE_CATEGORYS</span> <span class="token operator">=</span> <span class="token string">'receive_categorys'</span> <span class="token comment">// 接收分类数组</span> <span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">RECEIVE_GOODS</span> <span class="token operator">=</span> <span class="token string">'receive_goods'</span> <span class="token comment">// 接收商品数组</span> <span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">RECEIVE_INFO</span> <span class="token operator">=</span> <span class="token string">'receive_info'</span> <span class="token comment">// 接收商家信息</span> </code></pre> <p>mutations.js</p> <pre><code class="prism language-javascript"><span class="token comment">/* vuex 的 mutations 模块 */</span> <span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span> <span class="token keyword">import</span> <span class="token punctuation">{<!-- --></span>   <span class="token constant">RECEIVE_CATEGORYS</span><span class="token punctuation">,</span>   <span class="token constant">RECEIVE_INFO</span><span class="token punctuation">,</span>   <span class="token constant">RECEIVE_GOODS</span><span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'./mutation-types'</span> <span class="token comment">// [方法名](state,{param}){}</span> <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{<!-- --></span>   <span class="token punctuation">[</span><span class="token constant">RECEIVE_CATEGORYS</span><span class="token punctuation">]</span> <span class="token punctuation">(</span>state<span class="token punctuation">,</span> <span class="token punctuation">{<!-- --></span>categorys<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     state<span class="token punctuation">.</span>categorys <span class="token operator">=</span> categorys   <span class="token punctuation">}</span><span class="token punctuation">,</span>   <span class="token punctuation">[</span><span class="token constant">RECEIVE_INFO</span><span class="token punctuation">]</span> <span class="token punctuation">(</span>state<span class="token punctuation">,</span> <span class="token punctuation">{<!-- --></span>info<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     state<span class="token punctuation">.</span>info <span class="token operator">=</span> info   <span class="token punctuation">}</span><span class="token punctuation">,</span>   <span class="token punctuation">[</span><span class="token constant">RECEIVE_GOODS</span><span class="token punctuation">]</span> <span class="token punctuation">(</span>state<span class="token punctuation">,</span> <span class="token punctuation">{<!-- --></span>goods<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     state<span class="token punctuation">.</span>goods <span class="token operator">=</span> goods   <span class="token punctuation">}</span> <span class="token punctuation">}</span>  </code></pre> <p>actions.js</p> <pre><code class="prism language-javascript"><span class="token comment">/* Action:通过操作mutation间接更新state的多个方法的对象  */</span>  <span class="token comment">// 注意要引入api接口函数</span> <span class="token keyword">import</span> <span class="token punctuation">{<!-- --></span>   reqCategorys<span class="token punctuation">,</span>   reqShopGoods<span class="token punctuation">,</span>   reqShopInfo<span class="token punctuation">,</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'../api'</span> <span class="token keyword">import</span> <span class="token punctuation">{<!-- --></span>   <span class="token constant">RECEIVE_CATEGORYS</span><span class="token punctuation">,</span>   <span class="token constant">RECEIVE_GOODS</span><span class="token punctuation">,</span>   <span class="token constant">RECEIVE_INFO</span><span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'./mutation-types'</span> <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{<!-- --></span>   <span class="token comment">// 异步获取食品分类列表</span>   <span class="token keyword">async</span> <span class="token function">getCategorys</span> <span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span>commit<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     <span class="token comment">// 发送异步ajax请求</span>     <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">reqCategorys</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token comment">// 提交一个mutation</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>       <span class="token keyword">const</span> categorys <span class="token operator">=</span> result<span class="token punctuation">.</span>data       <span class="token function">commit</span><span class="token punctuation">(</span><span class="token constant">RECEIVE_CATEGORYS</span><span class="token punctuation">,</span> <span class="token punctuation">{<!-- --></span>categorys<span class="token punctuation">}</span><span class="token punctuation">)</span>     <span class="token punctuation">}</span>   <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token comment">// 异步获取商家列表</span>   <span class="token keyword">async</span> <span class="token function">getShops</span> <span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span>commit<span class="token punctuation">,</span> state<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     <span class="token comment">// 对象的结构赋值</span>     <span class="token keyword">const</span> <span class="token punctuation">{<!-- --></span>longitude<span class="token punctuation">,</span> latitude<span class="token punctuation">}</span> <span class="token operator">=</span> state     <span class="token comment">// 发送异步ajax请求</span>     <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">reqShops</span><span class="token punctuation">(</span>longitude<span class="token punctuation">,</span> latitude<span class="token punctuation">)</span>     <span class="token comment">// 提交一个mutation</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>       <span class="token keyword">const</span> shops <span class="token operator">=</span> result<span class="token punctuation">.</span>data       <span class="token function">commit</span><span class="token punctuation">(</span><span class="token constant">RECEIVE_SHOPS</span><span class="token punctuation">,</span> <span class="token punctuation">{<!-- --></span>shops<span class="token punctuation">}</span><span class="token punctuation">)</span>     <span class="token punctuation">}</span>   <span class="token punctuation">}</span><span class="token punctuation">,</span>   <span class="token comment">// 异步获取商家信息</span>   <span class="token keyword">async</span> <span class="token function">getShopInfo</span> <span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span>commit<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">reqShopInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>       <span class="token keyword">const</span> info <span class="token operator">=</span> result<span class="token punctuation">.</span>data       <span class="token function">commit</span><span class="token punctuation">(</span><span class="token constant">RECEIVE_INFO</span><span class="token punctuation">,</span> <span class="token punctuation">{<!-- --></span>info<span class="token punctuation">}</span><span class="token punctuation">)</span>     <span class="token punctuation">}</span>   <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">}</span>  </code></pre> <p>getters.js</p> <pre><code class="prism language-javascript"><span class="token comment">/* 包含多个基于state的getter计算属性的对象  */</span> <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{<!-- --></span>   <span class="token function">totalPrice</span> <span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     <span class="token keyword">return</span> state<span class="token punctuation">.</span>cartFoods<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>preTotal<span class="token punctuation">,</span> food<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> preTotal <span class="token operator">+</span> food<span class="token punctuation">.</span>count <span class="token operator">*</span> food<span class="token punctuation">.</span>price<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>   <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">}</span>  </code></pre> <blockquote> <p>将数据放在Vuex中,在页面中调用。详情还是看官方文档。</p> </blockquote> <pre><code class="prism language-javascript"><span class="token comment">// state</span> computed<span class="token punctuation">:</span> <span class="token punctuation">{<!-- --></span>     <span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'info'</span><span class="token punctuation">,</span> <span class="token string">'categorys'</span><span class="token punctuation">,</span> <span class="token string">'goods'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>     <span class="token punctuation">}</span> <span class="token comment">// mutations 同步</span> <span class="token comment">// action 异步 提交mutations</span>     <span class="token comment">// 通过this.$store.dispatch 方法触发调用Action</span>     <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'getAddress'</span><span class="token punctuation">)</span> 	<span class="token comment">// this.getAddress()</span>         <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getUserInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token punctuation">}</span><span class="token punctuation">,</span>   methods<span class="token punctuation">:</span> <span class="token punctuation">{<!-- --></span>     <span class="token operator">...</span><span class="token function">mapActions</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'getUserInfo'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>   <span class="token punctuation">}</span> </code></pre> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-91673.htm">猫咪用什么驱虫药比较好（猫咪用什么驱虫药效果最好）</a></p>
                                        <p>下一个：<a href="/news/article-92388.htm">动物疫苗可以带上高铁吗北京疫情防控（动物疫苗可以带上高铁吗北京疫情防控）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-65636.htm" title="猫多久不认得主人会死（猫多久不认得主人会死掉）">猫多久不认得主人会死（猫多久不认得主人会死掉）</a></li>
                        <li class="py-2"><a href="/news/article-68792.htm" title="广州狗狗用品批发市场（广州哪里批发宠物用品）">广州狗狗用品批发市场（广州哪里批发宠物用品）</a></li>
                        <li class="py-2"><a href="/news/article-75393.htm" title="家中有跳蚤怎么能除根（跳蚤咬的包什么样图片）">家中有跳蚤怎么能除根（跳蚤咬的包什么样图片）</a></li>
                        <li class="py-2"><a href="/news/article-88724.htm" title="动物防疫疫苗管理工作内容包括哪些方面（动物防疫程序制定）">动物防疫疫苗管理工作内容包括哪些方面（动物防疫程序制定）</a></li>
                        <li class="py-2"><a href="/news/article-94167.htm" title="开宠物店亏死了多少人啊知乎文章（开宠物店亏损多吗）">开宠物店亏死了多少人啊知乎文章（开宠物店亏损多吗）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-21-free-node-subscribe-links.htm" title="3月21日→18.3M/S|每日最新免费节点Clash/V2ray/SSR/Matsuri订阅链接地址">3月21日→18.3M/S|每日最新免费节点Clash/V2ray/SSR/Matsuri订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-91013.htm" title="动物医院诊室的岗位职责 动物医院诊室的岗位职责是什么">动物医院诊室的岗位职责 动物医院诊室的岗位职责是什么</a></li>
                        <li class="py-2"><a href="/news/article-72712.htm" title="1.23 实例：正则表达式验证IP地址">1.23 实例：正则表达式验证IP地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-29-free-high-speed-nodes.htm" title="3月29日→19.1M/S|每日最新免费节点Clash/V2ray/SSR/Matsuri订阅链接地址">3月29日→19.1M/S|每日最新免费节点Clash/V2ray/SSR/Matsuri订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-2-free-subscribe-node.htm" title="3月2日→18.8M/S|每日最新免费节点Clash/V2ray/SSR/Matsuri订阅链接地址">3月2日→18.8M/S|每日最新免费节点Clash/V2ray/SSR/Matsuri订阅链接地址</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">36</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">90</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
    <!-- End About Area -->
    <!-- Start Footer Area -->
<footer class="footer-area ptb-80">
    <div class="container">
        <div class="row">
            <div class="col-lg-12 col-md-12">
                                    <p>
                                                <a href="/">首页</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                <p>
                    <a href="/">Free Matsuri免费订阅节点分享官网</a> 版权所有
                    <br />
                    Powered by WordPress
                </p>
            </div>
        </div>
    </div>
</footer>
<!-- End Footer Area -->
<div class="go-top"><i class="fa fa-angle-up"></i></div>
<!-- jQuery Min JS -->
<script src="/assets/website/js/frontend/freematsuri/jquery-min.js"></script>
<!-- Prpper JS -->
<script src="/assets/website/js/frontend/freematsuri/popper.min.js"></script>
<!-- Bootstrap Min JS -->
<script src="/assets/website/js/frontend/freematsuri/bootstrap.min.js"></script>
<!-- Jquery Magnific Popup Min Js -->
<script src="/assets/website/js/frontend/freematsuri/jquery.magnific-popup.min.js"></script>
<!-- Jquery Mixitup Min Js -->
<script src="/assets/website/js/frontend/freematsuri/jquery.mixitup.min.js"></script>
<!-- Owl Carousel Min Js -->
<script src="/assets/website/js/frontend/freematsuri/owl.carousel.min.js"></script>
<!-- Jquery CounterUp Min JS -->
<script src="/assets/website/js/frontend/freematsuri/jquery.counterup.min.js"></script>
<!-- Waypoints Min Js -->
<script src="/assets/website/js/frontend/freematsuri/waypoints.min.js"></script>
<!-- Wow Min JS -->
<script src="/assets/website/js/frontend/freematsuri/wow.min.js"></script>
<!-- Classy Nav Min JS -->
<script src="/assets/website/js/frontend/freematsuri/classy-nav.min.js"></script>
<!-- Form Validator Min JS -->
<script src="/assets/website/js/frontend/freematsuri/form-validator.min.js"></script>
<!-- Contact Form Min JS -->
<script src="/assets/website/js/frontend/freematsuri/contact-form-script.js"></script>
<!-- Main JS -->
<script src="/assets/website/js/frontend/freematsuri/main.js"></script>
<script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
<script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>